'use strict';

exports.__esModule = true;

exports.default = function (name, output) {
    let reporters = [];

    if (name instanceof Array) reporters = name.map(r => typeof r === 'string' || typeof r === 'function' ? { name: r } : r);else {
        const reporter = { name, output };

        reporters.push(reporter);
    }

    reporters.forEach(r => validateReporterOutput(r.output));

    return reporters;
};

var _isStream = require('is-stream');

var _runtime = require('../errors/runtime');

var _types = require('../errors/types');

function isStreamMock(obj) {
    return obj && typeof obj.write === 'function' && typeof obj.end === 'function';
}

function validateReporterOutput(obj) {
    const isValidReporterOutput = obj === void 0 || typeof obj === 'string' || (0, _isStream.writable)(obj) || isStreamMock(obj);

    if (!isValidReporterOutput) throw new _runtime.GeneralError(_types.RUNTIME_ERRORS.invalidReporterOutput);
}

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9wcmVwYXJlLXJlcG9ydGVycy5qcyJdLCJuYW1lcyI6WyJuYW1lIiwib3V0cHV0IiwicmVwb3J0ZXJzIiwiQXJyYXkiLCJtYXAiLCJyIiwicmVwb3J0ZXIiLCJwdXNoIiwiZm9yRWFjaCIsInZhbGlkYXRlUmVwb3J0ZXJPdXRwdXQiLCJpc1N0cmVhbU1vY2siLCJvYmoiLCJ3cml0ZSIsImVuZCIsImlzVmFsaWRSZXBvcnRlck91dHB1dCIsImludmFsaWRSZXBvcnRlck91dHB1dCJdLCJtYXBwaW5ncyI6Ijs7OztrQkFvQmUsVUFBVUEsSUFBVixFQUFnQkMsTUFBaEIsRUFBd0I7QUFDbkMsUUFBSUMsWUFBWSxFQUFoQjs7QUFFQSxRQUFJRixnQkFBZ0JHLEtBQXBCLEVBQ0lELFlBQVlGLEtBQUtJLEdBQUwsQ0FBU0MsS0FBSyxPQUFPQSxDQUFQLEtBQWEsUUFBYixJQUF5QixPQUFPQSxDQUFQLEtBQWEsVUFBdEMsR0FBbUQsRUFBRUwsTUFBTUssQ0FBUixFQUFuRCxHQUFpRUEsQ0FBL0UsQ0FBWixDQURKLEtBRUs7QUFDRCxjQUFNQyxXQUFXLEVBQUVOLElBQUYsRUFBUUMsTUFBUixFQUFqQjs7QUFFQUMsa0JBQVVLLElBQVYsQ0FBZUQsUUFBZjtBQUNIOztBQUVESixjQUFVTSxPQUFWLENBQWtCSCxLQUFLSSx1QkFBdUJKLEVBQUVKLE1BQXpCLENBQXZCOztBQUVBLFdBQU9DLFNBQVA7QUFDSCxDOztBQWxDRDs7QUFDQTs7QUFDQTs7QUFFQSxTQUFTUSxZQUFULENBQXVCQyxHQUF2QixFQUE0QjtBQUN4QixXQUFPQSxPQUNBLE9BQU9BLElBQUlDLEtBQVgsS0FBcUIsVUFEckIsSUFFQSxPQUFPRCxJQUFJRSxHQUFYLEtBQW1CLFVBRjFCO0FBR0g7O0FBRUQsU0FBU0osc0JBQVQsQ0FBaUNFLEdBQWpDLEVBQXNDO0FBQ2xDLFVBQU1HLHdCQUF3QkgsUUFBUSxLQUFLLENBQWIsSUFDeEIsT0FBT0EsR0FBUCxLQUFlLFFBRFMsSUFFeEIsd0JBQWlCQSxHQUFqQixDQUZ3QixJQUd4QkQsYUFBYUMsR0FBYixDQUhOOztBQUtBLFFBQUksQ0FBQ0cscUJBQUwsRUFDSSxNQUFNLDBCQUFpQixzQkFBZUMscUJBQWhDLENBQU47QUFDUCIsImZpbGUiOiJ1dGlscy9wcmVwYXJlLXJlcG9ydGVycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdyaXRhYmxlIGFzIGlzV3JpdGFibGVTdHJlYW0gfSBmcm9tICdpcy1zdHJlYW0nO1xuaW1wb3J0IHsgR2VuZXJhbEVycm9yIH0gZnJvbSAnLi4vZXJyb3JzL3J1bnRpbWUnO1xuaW1wb3J0IHsgUlVOVElNRV9FUlJPUlMgfSBmcm9tICcuLi9lcnJvcnMvdHlwZXMnO1xuXG5mdW5jdGlvbiBpc1N0cmVhbU1vY2sgKG9iaikge1xuICAgIHJldHVybiBvYmogJiZcbiAgICAgICAgICAgdHlwZW9mIG9iai53cml0ZSA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgICAgICB0eXBlb2Ygb2JqLmVuZCA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVSZXBvcnRlck91dHB1dCAob2JqKSB7XG4gICAgY29uc3QgaXNWYWxpZFJlcG9ydGVyT3V0cHV0ID0gb2JqID09PSB2b2lkIDAgfHxcbiAgICAgICAgICB0eXBlb2Ygb2JqID09PSAnc3RyaW5nJyB8fFxuICAgICAgICAgIGlzV3JpdGFibGVTdHJlYW0ob2JqKSB8fFxuICAgICAgICAgIGlzU3RyZWFtTW9jayhvYmopO1xuXG4gICAgaWYgKCFpc1ZhbGlkUmVwb3J0ZXJPdXRwdXQpXG4gICAgICAgIHRocm93IG5ldyBHZW5lcmFsRXJyb3IoUlVOVElNRV9FUlJPUlMuaW52YWxpZFJlcG9ydGVyT3V0cHV0KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG5hbWUsIG91dHB1dCkge1xuICAgIGxldCByZXBvcnRlcnMgPSBbXTtcblxuICAgIGlmIChuYW1lIGluc3RhbmNlb2YgQXJyYXkpXG4gICAgICAgIHJlcG9ydGVycyA9IG5hbWUubWFwKHIgPT4gdHlwZW9mIHIgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiByID09PSAnZnVuY3Rpb24nID8geyBuYW1lOiByIH0gOiByKTtcbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgcmVwb3J0ZXIgPSB7IG5hbWUsIG91dHB1dCB9O1xuXG4gICAgICAgIHJlcG9ydGVycy5wdXNoKHJlcG9ydGVyKTtcbiAgICB9XG5cbiAgICByZXBvcnRlcnMuZm9yRWFjaChyID0+IHZhbGlkYXRlUmVwb3J0ZXJPdXRwdXQoci5vdXRwdXQpKTtcblxuICAgIHJldHVybiByZXBvcnRlcnM7XG59XG4iXX0=
