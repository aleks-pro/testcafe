'use strict';

exports.__esModule = true;

var _events = require('events');

var _events2 = _interopRequireDefault(_events);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const TERMINATION_TYPES = {
    sigint: 'sigint',
    sigbreak: 'sigbreak',
    shutdown: 'shutdown'
};

const TERMINATION_LEVEL_INCREASED_EVENT = 'termination-level-increased';

class TerminationHandler extends _events2.default {
    constructor() {
        super();

        this.handledSignalsCount = {
            [TERMINATION_TYPES.sigint]: 0,
            [TERMINATION_TYPES.sigbreak]: 0,
            [TERMINATION_TYPES.shutdown]: 0
        };

        this.terminationLevel = 0;

        this._setupHandlers();
    }

    _exitEventHandler(terminationType) {
        this.handledSignalsCount[terminationType]++;

        if (this.handledSignalsCount[terminationType] > this.terminationLevel) {
            this.terminationLevel = this.handledSignalsCount[terminationType];

            this.emit(TERMINATION_LEVEL_INCREASED_EVENT, this.terminationLevel);
        }
    }

    _setupHandlers() {
        process.on('SIGINT', () => this._exitEventHandler(TERMINATION_TYPES.sigint));
        process.on('SIGBREAK', () => this._exitEventHandler(TERMINATION_TYPES.sigbreak));

        process.on('message', message => message === 'shutdown' && this._exitEventHandler(TERMINATION_TYPES.shutdown));
    }
}

exports.default = TerminationHandler;
TerminationHandler.TERMINATION_LEVEL_INCREASED_EVENT = TERMINATION_LEVEL_INCREASED_EVENT;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jbGkvdGVybWluYXRpb24taGFuZGxlci5qcyJdLCJuYW1lcyI6WyJURVJNSU5BVElPTl9UWVBFUyIsInNpZ2ludCIsInNpZ2JyZWFrIiwic2h1dGRvd24iLCJURVJNSU5BVElPTl9MRVZFTF9JTkNSRUFTRURfRVZFTlQiLCJUZXJtaW5hdGlvbkhhbmRsZXIiLCJjb25zdHJ1Y3RvciIsImhhbmRsZWRTaWduYWxzQ291bnQiLCJ0ZXJtaW5hdGlvbkxldmVsIiwiX3NldHVwSGFuZGxlcnMiLCJfZXhpdEV2ZW50SGFuZGxlciIsInRlcm1pbmF0aW9uVHlwZSIsImVtaXQiLCJwcm9jZXNzIiwib24iLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7OztBQUdBLE1BQU1BLG9CQUFvQjtBQUN0QkMsWUFBVSxRQURZO0FBRXRCQyxjQUFVLFVBRlk7QUFHdEJDLGNBQVU7QUFIWSxDQUExQjs7QUFNQSxNQUFNQyxvQ0FBb0MsNkJBQTFDOztBQUVlLE1BQU1DLGtCQUFOLDBCQUE4QztBQUN6REMsa0JBQWU7QUFDWDs7QUFFQSxhQUFLQyxtQkFBTCxHQUEyQjtBQUN2QixhQUFDUCxrQkFBa0JDLE1BQW5CLEdBQThCLENBRFA7QUFFdkIsYUFBQ0Qsa0JBQWtCRSxRQUFuQixHQUE4QixDQUZQO0FBR3ZCLGFBQUNGLGtCQUFrQkcsUUFBbkIsR0FBOEI7QUFIUCxTQUEzQjs7QUFNQSxhQUFLSyxnQkFBTCxHQUF3QixDQUF4Qjs7QUFFQSxhQUFLQyxjQUFMO0FBQ0g7O0FBRURDLHNCQUFtQkMsZUFBbkIsRUFBb0M7QUFDaEMsYUFBS0osbUJBQUwsQ0FBeUJJLGVBQXpCOztBQUVBLFlBQUksS0FBS0osbUJBQUwsQ0FBeUJJLGVBQXpCLElBQTRDLEtBQUtILGdCQUFyRCxFQUF1RTtBQUNuRSxpQkFBS0EsZ0JBQUwsR0FBd0IsS0FBS0QsbUJBQUwsQ0FBeUJJLGVBQXpCLENBQXhCOztBQUVBLGlCQUFLQyxJQUFMLENBQVVSLGlDQUFWLEVBQTZDLEtBQUtJLGdCQUFsRDtBQUNIO0FBQ0o7O0FBRURDLHFCQUFrQjtBQUNkSSxnQkFBUUMsRUFBUixDQUFXLFFBQVgsRUFBcUIsTUFBTSxLQUFLSixpQkFBTCxDQUF1QlYsa0JBQWtCQyxNQUF6QyxDQUEzQjtBQUNBWSxnQkFBUUMsRUFBUixDQUFXLFVBQVgsRUFBdUIsTUFBTSxLQUFLSixpQkFBTCxDQUF1QlYsa0JBQWtCRSxRQUF6QyxDQUE3Qjs7QUFFQVcsZ0JBQVFDLEVBQVIsQ0FBVyxTQUFYLEVBQXNCQyxXQUFXQSxZQUFZLFVBQVosSUFBMEIsS0FBS0wsaUJBQUwsQ0FBdUJWLGtCQUFrQkcsUUFBekMsQ0FBM0Q7QUFDSDtBQTlCd0Q7O2tCQUF4Q0Usa0I7QUFpQ3JCQSxtQkFBbUJELGlDQUFuQixHQUF1REEsaUNBQXZEIiwiZmlsZSI6ImNsaS90ZXJtaW5hdGlvbi1oYW5kbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tICdldmVudHMnO1xuXG5cbmNvbnN0IFRFUk1JTkFUSU9OX1RZUEVTID0ge1xuICAgIHNpZ2ludDogICAnc2lnaW50JyxcbiAgICBzaWdicmVhazogJ3NpZ2JyZWFrJyxcbiAgICBzaHV0ZG93bjogJ3NodXRkb3duJ1xufTtcblxuY29uc3QgVEVSTUlOQVRJT05fTEVWRUxfSU5DUkVBU0VEX0VWRU5UID0gJ3Rlcm1pbmF0aW9uLWxldmVsLWluY3JlYXNlZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRlcm1pbmF0aW9uSGFuZGxlciBleHRlbmRzIEV2ZW50RW1pdHRlciB7XG4gICAgY29uc3RydWN0b3IgKCkge1xuICAgICAgICBzdXBlcigpO1xuXG4gICAgICAgIHRoaXMuaGFuZGxlZFNpZ25hbHNDb3VudCA9IHtcbiAgICAgICAgICAgIFtURVJNSU5BVElPTl9UWVBFUy5zaWdpbnRdOiAgIDAsXG4gICAgICAgICAgICBbVEVSTUlOQVRJT05fVFlQRVMuc2lnYnJlYWtdOiAwLFxuICAgICAgICAgICAgW1RFUk1JTkFUSU9OX1RZUEVTLnNodXRkb3duXTogMFxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMudGVybWluYXRpb25MZXZlbCA9IDA7XG5cbiAgICAgICAgdGhpcy5fc2V0dXBIYW5kbGVycygpO1xuICAgIH1cblxuICAgIF9leGl0RXZlbnRIYW5kbGVyICh0ZXJtaW5hdGlvblR5cGUpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVkU2lnbmFsc0NvdW50W3Rlcm1pbmF0aW9uVHlwZV0rKztcblxuICAgICAgICBpZiAodGhpcy5oYW5kbGVkU2lnbmFsc0NvdW50W3Rlcm1pbmF0aW9uVHlwZV0gPiB0aGlzLnRlcm1pbmF0aW9uTGV2ZWwpIHtcbiAgICAgICAgICAgIHRoaXMudGVybWluYXRpb25MZXZlbCA9IHRoaXMuaGFuZGxlZFNpZ25hbHNDb3VudFt0ZXJtaW5hdGlvblR5cGVdO1xuXG4gICAgICAgICAgICB0aGlzLmVtaXQoVEVSTUlOQVRJT05fTEVWRUxfSU5DUkVBU0VEX0VWRU5ULCB0aGlzLnRlcm1pbmF0aW9uTGV2ZWwpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3NldHVwSGFuZGxlcnMgKCkge1xuICAgICAgICBwcm9jZXNzLm9uKCdTSUdJTlQnLCAoKSA9PiB0aGlzLl9leGl0RXZlbnRIYW5kbGVyKFRFUk1JTkFUSU9OX1RZUEVTLnNpZ2ludCkpO1xuICAgICAgICBwcm9jZXNzLm9uKCdTSUdCUkVBSycsICgpID0+IHRoaXMuX2V4aXRFdmVudEhhbmRsZXIoVEVSTUlOQVRJT05fVFlQRVMuc2lnYnJlYWspKTtcblxuICAgICAgICBwcm9jZXNzLm9uKCdtZXNzYWdlJywgbWVzc2FnZSA9PiBtZXNzYWdlID09PSAnc2h1dGRvd24nICYmIHRoaXMuX2V4aXRFdmVudEhhbmRsZXIoVEVSTUlOQVRJT05fVFlQRVMuc2h1dGRvd24pKTtcbiAgICB9XG59XG5cblRlcm1pbmF0aW9uSGFuZGxlci5URVJNSU5BVElPTl9MRVZFTF9JTkNSRUFTRURfRVZFTlQgPSBURVJNSU5BVElPTl9MRVZFTF9JTkNSRUFTRURfRVZFTlQ7XG4iXX0=
